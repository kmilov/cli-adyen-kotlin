/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package payments

import com.github.kittinunf.fuel.httpGet
import com.github.kittinunf.result.Result

import com.adyen.Client;
import com.adyen.enums.Environment
import com.adyen.service.checkout.PaymentsApi
import com.adyen.model.checkout.*


class App {}

fun testPayment() {
    val client: Client = Client("KEY", Environment.TEST)
    val paymentsAPI = PaymentsApi(client)

    val paymentRequest = PaymentRequest()
    paymentRequest.setMerchantAccount("merchant-account")
    val cardDetails = CardDetails()
    cardDetails.encryptedCardNumber("test_23123123")
            .encryptedSecurityCode("test_123")
            .encryptedExpiryMonth("test_123")
            .encryptedExpiryYear("test_2023")
    paymentRequest.setPaymentMethod(CheckoutPaymentMethod(cardDetails))
    val amount = Amount().currency("EUR").value(1000)

    paymentRequest.setAmount(amount)
    paymentRequest.setReference("order number")
    paymentRequest.setReturnUrl("https://driftjeweg.com")

    val paymentResponse = paymentsApi.payments(paymentRequest)



}

fun main(args: Array<String>) {
    testPayment()

    // val httpAsync = "https://httpbin.org/get"
    //     .httpGet()
    //     .responseString { request, response, result ->
    //         println("Another thread..")
    //         when (result) {
    //             is Result.Failure -> {
    //                 val ex = result.getException()
    //                 println("Failure...")
    //                 println(ex)
    //             }
    //             is Result.Success -> {
    //                 println("Success..")
    //                 val data = result.get()
    //                 println(data)
    //             }
    //         }
    //     }

    // httpAsync.join()
    // println("main thread...")
}

